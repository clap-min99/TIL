import sys
input = sys.stdin.readline


def dfs(c):
    v[c] = 1                # 방문 표시
    ans_dfs.append(c)       # 방문 노드 추가
    for n in adj[c]:            
        if v[n] == 0:       # 방문하지 않은 노드인 경우
            dfs(n)

def bfs(s):
    q = []                  # queue, visited 배열. 변수 생성
    q.append(s)             # q에 초기 데이터 삽입

    ans_bfs.append(s)
    v[s] = 1
    while q:
        c = q.pop(0)
        for n in adj[c]:
            if v[n] == 0:
                q.append(n)
                ans_bfs.append(n)
                v[n] = 1


N, M, V = map(int, input().split())
adj = [[] for _ in range(N+1)]

for _ in range(M):
    x, y = map(int, input().split())
    adj[x].append(y)
    adj[y].append(x)

for i in range(1, N+1):
    adj[i].sort()
v = [0]*(N+1)
ans_dfs = []
dfs(V)

v = [0]*(N+1)
ans_bfs = []
bfs(V)

print(*ans_dfs)
print(*ans_bfs)